{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (2)\\\\New folder\\\\GateStone_FrontEnd\\\\src\\\\components\\\\pages\\\\Forgot.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport './forgot.css';\nimport { userManagement } from \"../../api/Api\";\nexport default class ForgotPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkPasswordLength = password => {\n      if (password.length >= 8) {\n        this.setState({\n          charNumberValid: true\n        });\n      } else {\n        this.setState({\n          charNumberValid: false\n        });\n      }\n    };\n\n    this.checkSpecialCharacters = password => {\n      const pattern = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/g;\n\n      if (pattern.test(password)) {\n        this.setState({\n          specialCharValid: true\n        });\n      } else {\n        this.setState({\n          specialCharValid: false\n        });\n      }\n    };\n\n    this.checkUppercase = password => {\n      const pattern = /[A-Z]/;\n\n      if (pattern.test(password)) {\n        this.setState({\n          uppercaseValid: true\n        });\n      } else {\n        this.setState({\n          uppercaseValid: false\n        });\n      }\n    };\n\n    this.checkNumber = password => {\n      const pattern = /[0-9]/;\n\n      if (pattern.test(password)) {\n        this.setState({\n          numberValid: true\n        });\n      } else {\n        this.setState({\n          numberValid: false\n        });\n      }\n    };\n\n    this.handleUsernameChange = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handlePasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n      this.checkPasswordLength(event.target.value);\n      this.checkSpecialCharacters(event.target.value);\n      this.checkUppercase(event.target.value);\n      this.checkNumber(event.target.value);\n    };\n\n    this.handleoldPasswordChange = event => {\n      this.setState({\n        oldPassword: event.target.value\n      });\n    };\n\n    this.handleConfirmPasswordChange = event => {\n      this.setState({\n        confirmPassword: event.target.value,\n        match: null\n      });\n    };\n\n    this.comparePassword = event => {\n      if (this.state.password === this.state.confirmPassword) {\n        this.setState({\n          match: true\n        });\n      } else {\n        this.setState({\n          match: false\n        });\n      }\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        username: '',\n        password: '',\n        confirmPassword: '',\n        match: null\n      });\n      this.username.focus();\n    };\n\n    this.resetPassword = () => {\n      if (this.state.username && this.state.oldPassword && this.state.match) {\n        const data = {\n          \"type\": \"changePassword\",\n          \"userName\": this.state.username,\n          \"oldPassword\": this.state.oldPassword,\n          \"newPassword\": this.state.password\n        };\n        userManagement(data).then(res => {\n          this.setState({\n            success: res.data\n          });\n        });\n      }\n    };\n\n    this.state = {\n      username: '',\n      oldPassword: '',\n      password: '',\n      confirmPassword: '',\n      match: null,\n      charNumberValid: false,\n      specialCharValid: false,\n      uppercaseValid: false,\n      numberValid: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"account__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: 'blue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      ref: input => {\n        this.username = input;\n      },\n      value: this.state.username,\n      onChange: event => this.handleUsernameChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, \"Old Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"password\",\n      value: this.state.oldPassword,\n      onChange: event => this.handleoldPasswordChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, \"New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: event => this.handlePasswordChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: `input__label ${this.state.match == false ? 'error-msg' : null}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, \"Confirm New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: `input${this.state.match == false ? '--error' : ''}`,\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: event => this.handleConfirmPasswordChange(event),\n      onBlur: this.comparePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button--success\",\n      onClick: this.resetPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, \"Change Password\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button--secondary\",\n      onClick: this.resetForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, \"Reset\")), this.state.success ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, \"Password Changed \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 40\n      }\n    }, \"Click here for login\")) : \"\");\n  }\n\n}","map":{"version":3,"sources":["D:/New folder (2)/New folder/GateStone_FrontEnd/src/components/pages/Forgot.js"],"names":["React","Component","Link","userManagement","ForgotPage","constructor","props","checkPasswordLength","password","length","setState","charNumberValid","checkSpecialCharacters","pattern","test","specialCharValid","checkUppercase","uppercaseValid","checkNumber","numberValid","handleUsernameChange","event","username","target","value","handlePasswordChange","handleoldPasswordChange","oldPassword","handleConfirmPasswordChange","confirmPassword","match","comparePassword","state","resetForm","focus","resetPassword","data","then","res","success","render","color","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,cAAP;AACA,SAAQC,cAAR,QAA8B,eAA9B;AAGA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAkC;AAC7CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcjBC,mBAdiB,GAcMC,QAAD,IAAc;AAClC,UAAIA,QAAQ,CAACC,MAAT,IAAmB,CAAvB,EAA0B;AACxB,aAAKC,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAE;AADL,SAAd;AAGD,OAJD,MAIO;AACL,aAAKD,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAE;AADL,SAAd;AAGD;AACF,KAxBgB;;AAAA,SAyBjBC,sBAzBiB,GAyBSJ,QAAD,IAAc;AACrC,YAAMK,OAAO,GAAG,yCAAhB;;AACE,UAAIA,OAAO,CAACC,IAAR,CAAaN,QAAb,CAAJ,EAA4B;AAC5B,aAAKE,QAAL,CAAc;AACZK,UAAAA,gBAAgB,EAAE;AADN,SAAd;AAGD,OAJC,MAIK;AACL,aAAKL,QAAL,CAAc;AACZK,UAAAA,gBAAgB,EAAE;AADN,SAAd;AAGD;AACF,KApCgB;;AAAA,SAqCjBC,cArCiB,GAqCCR,QAAD,IAAc;AAC7B,YAAMK,OAAO,GAAG,OAAhB;;AACA,UAAIA,OAAO,CAACC,IAAR,CAAaN,QAAb,CAAJ,EAA4B;AAC1B,aAAKE,QAAL,CAAc;AACZO,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGD,OAJD,MAIO;AACL,aAAKP,QAAL,CAAc;AACZO,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGD;AACF,KAhDgB;;AAAA,SAmDrBC,WAnDqB,GAmDNV,QAAD,IAAc;AAC1B,YAAMK,OAAO,GAAG,OAAhB;;AACD,UAAIA,OAAO,CAACC,IAAR,CAAaN,QAAb,CAAJ,EAA4B;AACzB,aAAKE,QAAL,CAAc;AACZS,UAAAA,WAAW,EAAE;AADD,SAAd;AAGD,OAJF,MAIQ;AACL,aAAKT,QAAL,CAAc;AACZS,UAAAA,WAAW,EAAE;AADD,SAAd;AAGD;AACF,KA9DoB;;AAAA,SAgErBC,oBAhEqB,GAgEGC,KAAD,IAAW;AAChC,WAAKX,QAAL,CAAc;AACZY,QAAAA,QAAQ,EAAED,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGD,KApEoB;;AAAA,SAsErBC,oBAtEqB,GAsEGJ,KAAD,IAAW;AAChC,WAAKX,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAEa,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGA,WAAKjB,mBAAL,CAAyBc,KAAK,CAACE,MAAN,CAAaC,KAAtC;AACA,WAAKZ,sBAAL,CAA4BS,KAAK,CAACE,MAAN,CAAaC,KAAzC;AACA,WAAKR,cAAL,CAAoBK,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACA,WAAKN,WAAL,CAAiBG,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACD,KA9EoB;;AAAA,SAgFrBE,uBAhFqB,GAgFML,KAAD,IAAW;AACnC,WAAKX,QAAL,CAAc;AACZiB,QAAAA,WAAW,EAAEN,KAAK,CAACE,MAAN,CAAaC;AADd,OAAd;AAGD,KApFoB;;AAAA,SAsFrBI,2BAtFqB,GAsFUP,KAAD,IAAW;AACvC,WAAKX,QAAL,CAAc;AACZmB,QAAAA,eAAe,EAAER,KAAK,CAACE,MAAN,CAAaC,KADlB;AAEZM,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KA3FoB;;AAAA,SA6FrBC,eA7FqB,GA6FFV,KAAD,IAAW;AAC3B,UAAI,KAAKW,KAAL,CAAWxB,QAAX,KAAwB,KAAKwB,KAAL,CAAWH,eAAvC,EAAwD;AACtD,aAAKnB,QAAL,CAAc;AACZoB,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAJD,MAIO;AACL,aAAKpB,QAAL,CAAc;AACZoB,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;AACF,KAvGoB;;AAAA,SAyGrBG,SAzGqB,GAyGT,MAAM;AAChB,WAAKvB,QAAL,CAAc;AACZY,QAAAA,QAAQ,EAAE,EADE;AAEZd,QAAAA,QAAQ,EAAE,EAFE;AAGZqB,QAAAA,eAAe,EAAE,EAHL;AAIZC,QAAAA,KAAK,EAAE;AAJK,OAAd;AAOA,WAAKR,QAAL,CAAcY,KAAd;AACD,KAlHoB;;AAAA,SAoHrBC,aApHqB,GAoHN,MAAM;AACnB,UAAG,KAAKH,KAAL,CAAWV,QAAX,IAAuB,KAAKU,KAAL,CAAWL,WAAlC,IAAiD,KAAKK,KAAL,CAAWF,KAA/D,EAAsE;AACpE,cAAMM,IAAI,GAAG;AACX,kBAAS,gBADE;AAEX,sBAAa,KAAKJ,KAAL,CAAWV,QAFb;AAGX,yBAAgB,KAAKU,KAAL,CAAWL,WAHhB;AAIX,yBAAgB,KAAKK,KAAL,CAAWxB;AAJhB,SAAb;AAMCL,QAAAA,cAAc,CAACiC,IAAD,CAAd,CAAqBC,IAArB,CAA2BC,GAAD,IAAS;AACjC,eAAK5B,QAAL,CAAc;AAAC6B,YAAAA,OAAO,EAAGD,GAAG,CAACF;AAAf,WAAd;AACD,SAFD;AAGF;AACF,KAhIoB;;AAEf,SAAKJ,KAAL,GAAa;AACXV,MAAAA,QAAQ,EAAE,EADC;AAEXK,MAAAA,WAAW,EAAG,EAFH;AAGXnB,MAAAA,QAAQ,EAAE,EAHC;AAIXqB,MAAAA,eAAe,EAAE,EAJN;AAKXC,MAAAA,KAAK,EAAE,IALI;AAMXnB,MAAAA,eAAe,EAAE,KANN;AAOXI,MAAAA,gBAAgB,EAAE,KAPP;AAQXE,MAAAA,cAAc,EAAE,KARL;AASXE,MAAAA,WAAW,EAAE;AATF,KAAb;AAWD;;AAoHHqB,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAS,MAAA,SAAS,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,GAAG,EAAGC,KAAD,IAAW;AAAE,aAAKpB,QAAL,GAAgBoB,KAAhB;AAAwB,OAF5C;AAGE,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWV,QAHpB;AAIE,MAAA,QAAQ,EAAGD,KAAD,IAAW,KAAKD,oBAAL,CAA0BC,KAA1B,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADA,eAWA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWL,WAHpB;AAIE,MAAA,QAAQ,EAAGN,KAAD,IAAW,KAAKK,uBAAL,CAA6BL,KAA7B,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAUI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWxB,QAHpB;AAIE,MAAA,QAAQ,EAAGa,KAAD,IAAW,KAAKI,oBAAL,CAA0BJ,KAA1B,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAVJ,eAmBE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAG,gBAAe,KAAKW,KAAL,CAAWF,KAAX,IAAoB,KAApB,GAA4B,WAA5B,GAA0C,IAAK,EAD5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE;AACE,MAAA,SAAS,EAAG,QAAQ,KAAKE,KAAL,CAAWF,KAAX,IAAoB,KAApB,GAA4B,SAA5B,GAAwC,EAAG,EADjE;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWH,eAHpB;AAIE,MAAA,QAAQ,EAAGR,KAAD,IAAW,KAAKO,2BAAL,CAAiCP,KAAjC,CAJvB;AAKE,MAAA,MAAM,EAAE,KAAKU,eALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAnBF,CADF,CAXA,eA6CA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKI,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,OAAO,EAAE,KAAKF,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CA7CA,EAsDC,KAAKD,KAAL,CAAWO,OAAX,gBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAuB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAvB,CADP,GAES,EAxDV,CADA;AA4DH;;AA/L4C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport './forgot.css';\r\nimport {userManagement } from \"../../api/Api\";\r\n\r\n\r\nexport default class ForgotPage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          username: '',\r\n          oldPassword : '',\r\n          password: '',\r\n          confirmPassword: '',\r\n          match: null,\r\n          charNumberValid: false,\r\n          specialCharValid: false,\r\n          uppercaseValid: false,\r\n          numberValid: false\r\n        }\r\n      }\r\n      checkPasswordLength = (password) => {\r\n        if (password.length >= 8) {\r\n          this.setState({\r\n            charNumberValid: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            charNumberValid: false\r\n          })\r\n        }\r\n      }\r\n      checkSpecialCharacters = (password) => {\r\n        const pattern = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/g;\r\n          if (pattern.test(password)) {\r\n          this.setState({\r\n            specialCharValid: true\r\n          }) \r\n        } else {\r\n          this.setState({\r\n            specialCharValid: false\r\n          }) \r\n        }\r\n      }\r\n      checkUppercase = (password) => {\r\n        const pattern = /[A-Z]/;\r\n        if (pattern.test(password)) {\r\n          this.setState({\r\n            uppercaseValid: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            uppercaseValid: false\r\n          })\r\n        }\r\n      }\r\n  \r\n  // Check for a number\r\n  checkNumber = (password) => {\r\n    const pattern = /[0-9]/;\r\n\t  if (pattern.test(password)) {\r\n      this.setState({\r\n        numberValid: true\r\n      }) \r\n    } else {\r\n      this.setState({\r\n        numberValid: false\r\n      })\r\n    }\r\n  }\r\n  \r\n  handleUsernameChange = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    })\r\n  }\r\n    \r\n  handlePasswordChange = (event) => {\r\n    this.setState({\r\n      password: event.target.value\r\n    })\r\n    this.checkPasswordLength(event.target.value);\r\n    this.checkSpecialCharacters(event.target.value);\r\n    this.checkUppercase(event.target.value);\r\n    this.checkNumber(event.target.value);\r\n  };\r\n\r\n  handleoldPasswordChange = (event) => {\r\n    this.setState({\r\n      oldPassword: event.target.value\r\n    })\r\n  }\r\n\r\n  handleConfirmPasswordChange = (event) => {\r\n    this.setState({\r\n      confirmPassword: event.target.value,\r\n      match: null\r\n    })\r\n  };\r\n\r\n  comparePassword = (event) => {\r\n    if (this.state.password === this.state.confirmPassword) {\r\n      this.setState({\r\n        match: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        match: false\r\n      })\r\n    }\r\n  }\r\n  \r\n  resetForm = () => {\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      match: null\r\n    })\r\n    \r\n    this.username.focus();\r\n  }            \r\n\r\n  resetPassword =() => {\r\n    if(this.state.username && this.state.oldPassword && this.state.match) {\r\n      const data = {\r\n        \"type\" : \"changePassword\",\r\n        \"userName\" : this.state.username,\r\n        \"oldPassword\" : this.state.oldPassword,\r\n        \"newPassword\" : this.state.password\r\n       }\r\n       userManagement(data).then((res) => {\r\n         this.setState({success : res.data})\r\n       })\r\n    }\r\n  }\r\n    render(){\r\n        return(\r\n        <section className=\"account__container\">\r\n        <div className=\"input__container\">\r\n            <h1 style={{color:'blue'}}>Forgot Password</h1>\r\n          <label className=\"input__label\">Username</label>\r\n          <input\r\n            className=\"input\"\r\n            ref={(input) => { this.username = input; }} \r\n            value={this.state.username}\r\n            onChange={(event) => this.handleUsernameChange(event)}\r\n          />          \r\n        </div>\r\n        <div className=\"password-container\">\r\n          <div className=\"password\">\r\n            <div className=\"input__container\">\r\n              <label className=\"input__label\">Old Password</label>\r\n              <input \r\n                className=\"input\" \r\n                type=\"password\"\r\n                value={this.state.oldPassword}\r\n                onChange={(event) => this.handleoldPasswordChange(event)}\r\n              />  \r\n              </div> \r\n              <div className=\"input__container\">\r\n              <label className=\"input__label\">New Password</label>\r\n              <input \r\n                className=\"input\"\r\n                type=\"password\"\r\n                value={this.state.password}\r\n                onChange={(event) => this.handlePasswordChange(event)}\r\n              />  \r\n            </div>\r\n            <div className=\"input__container\">\r\n              <label \r\n                className={`input__label ${this.state.match == false ? 'error-msg' : null}`}\r\n                >Confirm New Password</label>\r\n              <input\r\n                className={`input${ this.state.match == false ? '--error' : ''}`}\r\n                type=\"password\"\r\n                value={this.state.confirmPassword}\r\n                onChange={(event) => this.handleConfirmPasswordChange(event)}\r\n                onBlur={this.comparePassword}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"button__container\">\r\n          <button className=\"button--success\" onClick={this.resetPassword}>Change Password</button>\r\n          <button\r\n            className=\"button--secondary\"\r\n            onClick={this.resetForm}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n        {this.state.success ? \r\n                <span>Password Changed <Link to=\"/\">Click here for login</Link></span>\r\n                : \"\" }\r\n      </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}